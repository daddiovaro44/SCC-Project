apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: f1-pipeline-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.22, pipelines.kubeflow.org/pipeline_compilation_time: '2023-12-26T21:35:45.454230',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "Applies Decision Tree
      and Logistic Regression for F1 classification problem.", "name": "F1 Pipeline"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.22}
spec:
  entrypoint: f1-pipeline
  templates:
  - name: decision-tree-classifier
    container:
      args: []
      command: [python, decision_tree.py, --data, /tmp/inputs/Data/data, --model,
        /tmp/outputs/Model/data]
      image: gianluca12galasso/decision_tree
    inputs:
      artifacts:
      - {name: load-data-function-Data, path: /tmp/inputs/Data/data}
    outputs:
      artifacts:
      - {name: decision-tree-classifier-Model, path: /tmp/outputs/Model/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.22
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Trains
          a  decision tree classifier", "implementation": {"container": {"command":
          ["python", "decision_tree.py", "--data", {"inputPath": "Data"}, "--model",
          {"outputPath": "Model"}], "image": "gianluca12galasso/decision_tree"}},
          "inputs": [{"description": "Path where data is stored.", "name": "Data",
          "type": "LocalPath"}], "name": "Decision Tree classifier", "outputs": [{"description":
          "model", "name": "Model", "type": "LocalPath"}]}', pipelines.kubeflow.org/component_ref: '{"digest":
          "52d4798844429d5f2b0cf0f4f222cb555fff21583eb7e9fdc3f7a3e421e8e1cd", "url":
          "decision_tree/decision_tree.yaml"}'}
  - name: f1-pipeline
    dag:
      tasks:
      - name: decision-tree-classifier
        template: decision-tree-classifier
        dependencies: [load-data-function]
        arguments:
          artifacts:
          - {name: load-data-function-Data, from: '{{tasks.load-data-function.outputs.artifacts.load-data-function-Data}}'}
      - {name: load-data-function, template: load-data-function}
      - name: logistic-regression-classifier
        template: logistic-regression-classifier
        dependencies: [load-data-function]
        arguments:
          artifacts:
          - {name: load-data-function-Data, from: '{{tasks.load-data-function.outputs.artifacts.load-data-function-Data}}'}
      - name: random-forest-classifier
        template: random-forest-classifier
        dependencies: [load-data-function]
        arguments:
          artifacts:
          - {name: load-data-function-Data, from: '{{tasks.load-data-function.outputs.artifacts.load-data-function-Data}}'}
  - name: load-data-function
    container:
      args: []
      command: [python, load_data.py, --data, /tmp/outputs/Data/data]
      image: gianluca12galasso/load_data
    outputs:
      artifacts:
      - {name: load-data-function-Data, path: /tmp/outputs/Data/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.22
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Load
          data from local dataset", "implementation": {"container": {"command": ["python",
          "load_data.py", "--data", {"outputPath": "Data"}], "image": "gianluca12galasso/load_data"}},
          "name": "Load Data Function", "outputs": [{"description": "Path where data
          will be stored.", "name": "Data", "type": "LocalPath"}]}', pipelines.kubeflow.org/component_ref: '{"digest":
          "e3c798a431f30db216f590dd561c1b3f168668a70784337dbcc80b50cc61f7ac", "url":
          "load_data/load_data.yaml"}'}
  - name: logistic-regression-classifier
    container:
      args: []
      command: [python, logistic_regression.py, --data, /tmp/inputs/Data/data, --model,
        /tmp/outputs/Model/data]
      image: gianluca12galasso/logistic_regression
    inputs:
      artifacts:
      - {name: load-data-function-Data, path: /tmp/inputs/Data/data}
    outputs:
      artifacts:
      - {name: logistic-regression-classifier-Model, path: /tmp/outputs/Model/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.22
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Trains
          a Logistic Regression Classifier", "implementation": {"container": {"command":
          ["python", "logistic_regression.py", "--data", {"inputPath": "Data"}, "--model",
          {"outputPath": "Model"}], "image": "gianluca12galasso/logistic_regression"}},
          "inputs": [{"description": "Path where data is stored.", "name": "Data",
          "type": "LocalPath"}], "name": "Logistic Regression Classifier", "outputs":
          [{"description": "Model", "name": "Model", "type": "LocalPath"}]}', pipelines.kubeflow.org/component_ref: '{"digest":
          "0f9f91f6e21fc46861f2243a4542ae6613aea786331a01b3cbe52de5438f3102", "url":
          "logistic_regression/logistic_regression.yaml"}'}
  - name: random-forest-classifier
    container:
      args: []
      command: [python, random_forest.py, --data, /tmp/inputs/Data/data, --model,
        /tmp/outputs/Model/data]
      image: gianluca12galasso/random_forest
    inputs:
      artifacts:
      - {name: load-data-function-Data, path: /tmp/inputs/Data/data}
    outputs:
      artifacts:
      - {name: random-forest-classifier-Model, path: /tmp/outputs/Model/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.22
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Trains
          a  decision tree classifier", "implementation": {"container": {"command":
          ["python", "random_forest.py", "--data", {"inputPath": "Data"}, "--model",
          {"outputPath": "Model"}], "image": "gianluca12galasso/random_forest"}},
          "inputs": [{"description": "Path where data is stored.", "name": "Data",
          "type": "LocalPath"}], "name": "Random Forest classifier", "outputs": [{"description":
          "Model", "name": "Model", "type": "LocalPath"}]}', pipelines.kubeflow.org/component_ref: '{"digest":
          "71c995335809aae21e37708b6c0ff2ceb20de68aa8b9747a1e223e66e420af4b", "url":
          "random_forest/random_forest.yaml"}'}
  arguments:
    parameters: []
  serviceAccountName: pipeline-runner
